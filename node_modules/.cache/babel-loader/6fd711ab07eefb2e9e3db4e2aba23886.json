{"remainingRequest":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\src\\store\\modules\\reddits.js","dependencies":[{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\src\\store\\modules\\reddits.js","mtime":1596083391289},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvR1JBQ0UvRG9jdW1lbnRzL3Byb2plY3RzL3JlZGRpdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwp2YXIgc3RhdGUgPSB7CiAgcmVkZGl0czogW10KfTsKdmFyIGdldHRlcnMgPSB7CiAgYWxsUmVkZGl0czogZnVuY3Rpb24gYWxsUmVkZGl0cyhzdGF0ZSkgewogICAgc3RhdGUucmVkZGl0czsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoUmVkZGl0czogZnVuY3Rpb24gZmV0Y2hSZWRkaXRzKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly93d3cucmVkZGl0LmNvbS8uanNvbicpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAvLyBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZS5kYXRhKQogICAgICAgICAgICAgIGNvbW1pdCgnc2V0UmVkZGl0cycsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgc2VhcmNoUmVkZGl0czogZnVuY3Rpb24gc2VhcmNoUmVkZGl0cyhfcmVmMiwgdGl0bGUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cHM6Ly93d3cucmVkZGl0LmNvbS8uanNvbi8iLmNvbmNhdCh0aXRsZSkpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbW1pdCgnbG9va1JlZGRpdHMnLCB0aXRsZSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGZpbHRlclJlZGRpdDogZnVuY3Rpb24gZmlsdGVyUmVkZGl0KF9yZWYzLCBlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgbGltaXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIGxpbWl0ID0gcGFyc2VJbnQoZS50YXJnZXQub3B0aW9uc1tlLnRhcmdldC5vcHRpb25zLnNlbGVjdGVkSW5kZXhdLmlubmVyVGV4dCk7CiAgICAgICAgICAgICAgY29tbWl0KCdmaWx0ZXJSZWRkaXQnLCBsaW1pdCk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cobGltaXQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFJlZGRpdHM6IGZ1bmN0aW9uIHNldFJlZGRpdHMoc3RhdGUsIHJlZGRpdHMpIHsKICAgIHJldHVybiBzdGF0ZS5yZWRkaXRzID0gcmVkZGl0czsKICB9LAogIGxvb2tSZWRkaXRzOiBmdW5jdGlvbiBsb29rUmVkZGl0cyhzdGF0ZSwgdGl0bGUpIHsKICAgIHJldHVybiBzdGF0ZS5yZWRkaXRzID0gc3RhdGUucmVkZGl0cy5maWx0ZXIoZnVuY3Rpb24gKHJlZGRpdCkgewogICAgICByZXR1cm4gcmVkZGl0LnRpdGxlICE9PSB0aXRsZTsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["C:/Users/GRACE/Documents/projects/reddit-app/src/store/modules/reddits.js"],"names":["axios","state","reddits","getters","allReddits","actions","fetchReddits","commit","get","response","data","console","log","searchReddits","title","filterReddit","e","limit","parseInt","target","options","selectedIndex","innerText","mutations","setReddits","lookReddits","filter","reddit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAG;AADA,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,UAAU,EAAG,oBAACH,KAAD,EAAW;AAAEA,IAAAA,KAAK,CAACC,OAAN;AAAe;AAD7B,CAAhB;AAKA,IAAMG,OAAO,GAAG;AACNC,EAAAA,YADM,8BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACJP,KAAK,CAACQ,GAAN,CAAU,8BAAV,CADI;;AAAA;AACrBC,cAAAA,QADqB;AAG3B;AAEAF,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,GATW;AAUNG,EAAAA,aAVM,gCAUqBC,KAVrB,EAU4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBP,cAAAA,MAAkB,SAAlBA,MAAkB;AAAA;AAAA,qBAC9BP,KAAK,CAACQ,GAAN,wCAA0CM,KAA1C,EAD8B;;AAAA;AAGpCP,cAAAA,MAAM,CAAC,aAAD,EAAgBO,KAAhB,CAAN;;AAHoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKvC,GAfW;AAiBNC,EAAAA,YAjBM,+BAiBiBC,CAjBjB,EAiBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAXT,cAAAA,MAAW,SAAXA,MAAW;AACrBU,cAAAA,KADqB,GACbC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBJ,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,aAAlC,EAAiDC,SAAlD,CADK;AAE3Bf,cAAAA,MAAM,CAAC,cAAD,EAAkBU,KAAlB,CAAN;AAEAN,cAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;AAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK9B;AAtBW,CAAhB;AA0BA,IAAMM,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAACvB,KAAD,EAAQC,OAAR;AAAA,WAAqBD,KAAK,CAACC,OAAN,GAAgBA,OAArC;AAAA,GADE;AAEduB,EAAAA,WAAW,EAAE,qBAACxB,KAAD,EAAQa,KAAR;AAAA,WAAmBb,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,CAAcwB,MAAd,CAAqB,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACb,KAAP,KAAiBA,KAArB;AAAA,KAA3B,CAAnC;AAAA;AAFC,CAAlB;AAMA,eAAgB;AACZb,EAAAA,KAAK,EAALA,KADY;AAEZE,EAAAA,OAAO,EAAPA,OAFY;AAGZE,EAAAA,OAAO,EAAPA,OAHY;AAIZkB,EAAAA,SAAS,EAATA;AAJY,CAAhB","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    reddits : [ ]\r\n}\r\n\r\nconst getters = {\r\n    allReddits : (state) => { state.reddits }\r\n}\r\n\r\n\r\nconst actions = {\r\n    async fetchReddits({ commit }) {\r\n        const response = await axios.get('https://www.reddit.com/.json');\r\n\r\n        // const data = JSON.parse(response.data)\r\n\r\n        commit('setReddits', response.data);\r\n\r\n        console.log(response.data)\r\n    },\r\n    async searchReddits({ commit } , title) {\r\n        await axios.get(`https://www.reddit.com/.json/${title}`);\r\n\r\n        commit('lookReddits', title);\r\n\r\n    },\r\n\r\n    async filterReddit({commit}, e){\r\n        const limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\r\n        commit('filterReddit' , limit)\r\n\r\n        console.log(limit);\r\n    }\r\n\r\n}\r\n\r\nconst mutations = {\r\n    setReddits: (state, reddits) => (state.reddits = reddits),\r\n    lookReddits: (state, title) => (state.reddits = state.reddits.filter(reddit => reddit.title !== title))\r\n\r\n}\r\n\r\nexport default  {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}