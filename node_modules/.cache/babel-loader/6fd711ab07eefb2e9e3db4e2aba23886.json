{"remainingRequest":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\src\\store\\modules\\reddits.js","dependencies":[{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\src\\store\\modules\\reddits.js","mtime":1596128326954},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\GRACE\\Documents\\projects\\reddit-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0dSQUNFL0RvY3VtZW50cy9wcm9qZWN0cy9yZWRkaXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKdmFyIHN0YXRlID0gewogIHJlZGRpdHM6IFtdLAogIG9yaWdpbmFsUmVkZGl0OiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxSZWRkaXRzOiBmdW5jdGlvbiBhbGxSZWRkaXRzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucmVkZGl0czsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoUmVkZGl0czogZnVuY3Rpb24gZmV0Y2hSZWRkaXRzKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly93d3cucmVkZGl0LmNvbS8uanNvbicpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoJ3NldFJlZGRpdHMnLCByZXNwb25zZS5kYXRhLmRhdGEuY2hpbGRyZW4pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgc2VhcmNoUmVkZGl0czogZnVuY3Rpb24gc2VhcmNoUmVkZGl0cyhfcmVmMiwgZSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHRpdGxlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICB0aXRsZSA9IGUudGFyZ2V0LnZhbHVlOwogICAgICAgICAgICAgIGNvbW1pdCgnbG9va1JlZGRpdHMnLCB0aXRsZSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGZpbHRlclJlZGRpdDogZnVuY3Rpb24gZmlsdGVyUmVkZGl0KF9yZWYzLCBlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgbGltaXQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIGxpbWl0ID0gcGFyc2VJbnQoZS50YXJnZXQudmFsdWUpOwogICAgICAgICAgICAgIGNvbW1pdCgnZmlsdGVyUmVkZGl0JywgbGltaXQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFJlZGRpdHM6IGZ1bmN0aW9uIHNldFJlZGRpdHMoc3RhdGUsIHJlZGRpdHMpIHsKICAgIHN0YXRlLnJlZGRpdHMgPSByZWRkaXRzOwogICAgc3RhdGUub3JpZ2luYWxSZWRkaXQgPSByZWRkaXRzOwogIH0sCiAgbG9va1JlZGRpdHM6IGZ1bmN0aW9uIGxvb2tSZWRkaXRzKHN0YXRlLCB0aXRsZSkgewogICAgdmFyIGV4aXN0aW5nUmVkZGl0cyA9IHN0YXRlLm9yaWdpbmFsUmVkZGl0OwogICAgdmFyIGZpbHRlcmVkUmVzdWx0ID0gZXhpc3RpbmdSZWRkaXRzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS5kYXRhLnRpdGxlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModGl0bGUudG9Mb3dlckNhc2UoKSk7CiAgICB9KTsKICAgIHJldHVybiBzdGF0ZS5yZWRkaXRzID0gZmlsdGVyZWRSZXN1bHQ7CiAgfSwKICBmaWx0ZXJSZWRkaXQ6IGZ1bmN0aW9uIGZpbHRlclJlZGRpdChzdGF0ZSwgdXBzKSB7CiAgICB2YXIgZXhpc3RpbmdSZWRkaXRzID0gc3RhdGUub3JpZ2luYWxSZWRkaXQ7CiAgICBjb25zb2xlLmxvZyh1cHMsIHR5cGUodXBzKSk7CiAgICB2YXIgaW5pdGlhbCA9IHVwcy5zcGxpdCgnLScpWzBdOwogICAgdmFyIGZpbmFsID0gdXBzLnNwbGl0KCctJylbMV07CiAgICB2YXIgZmlsdGVyZWRSZXN1bHQgPSBleGlzdGluZ1JlZGRpdHMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmRhdGEudXBzID49IGluaXRpYWwgJiYgZmluYWwgIT09ICdhYm92ZScgJiYgaXRlbS5kYXRhLnVwcyA8PSBmaW5hbDsKICAgIH0pOwogICAgcmV0dXJuIHN0YXRlLnJlZGRpdHMgPSBmaWx0ZXJlZFJlc3VsdDsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["C:/Users/GRACE/Documents/projects/reddit-app/src/store/modules/reddits.js"],"names":["axios","state","reddits","originalReddit","getters","allReddits","actions","fetchReddits","commit","get","response","data","children","searchReddits","e","title","target","value","filterReddit","limit","parseInt","mutations","setReddits","lookReddits","existingReddits","filteredResult","filter","item","toLowerCase","includes","ups","console","log","type","initial","split","final"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst state = {\r\n    reddits : [ ],\r\n    originalReddit : [ ]\r\n}\r\n\r\nconst getters = {\r\n    allReddits : (state) => { \r\n         \r\n        return state.reddits\r\n    }\r\n}\r\n\r\n\r\nconst actions = {\r\n    async fetchReddits({ commit }) {\r\n        const response = await axios.get('https://www.reddit.com/.json');\r\n\r\n        commit('setReddits', response.data.data.children);\r\n\r\n    },\r\n\r\n    async searchReddits({ commit } , e) {\r\n        const title = e.target.value;\r\n         \r\n        commit('lookReddits', title);\r\n        \r\n\r\n    },\r\n\r\n    async filterReddit({commit}, e){\r\n        const limit = parseInt(e.target.value);\r\n\r\n        commit('filterReddit' , limit)\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mutations = {\r\n    setReddits: (state, reddits) => {\r\n        state.reddits = reddits\r\n        state.originalReddit = reddits\r\n    },\r\n\r\n    lookReddits: (state, title) => {\r\n        const existingReddits = state.originalReddit\r\n\r\n        const filteredResult = existingReddits.filter(item => item.data.title.toLowerCase().includes(title.toLowerCase()))\r\n        \r\n        return state.reddits = filteredResult;\r\n        \r\n    },\r\n     \r\n    filterReddit: (state, ups) => {\r\n        const existingReddits = state.originalReddit\r\n        console.log(ups, type(ups))\r\n        const initial = ups.split('-')[0]\r\n        const final = ups.split('-')[1]\r\n\r\n        const filteredResult = existingReddits.filter(item => item.data.ups >= initial && (final !== 'above') && item.data.ups <= final )\r\n        \r\n        return state.reddits = filteredResult;\r\n        \r\n    },\r\n\r\n}\r\n\r\nexport default  {\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}"]}]}